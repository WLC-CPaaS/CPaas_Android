/**
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonParseException;
import com.google.gson.reflect.TypeToken;
import java.lang.reflect.Type;
import java.util.List;
import java.util.Date;
import org.openapitools.client.model.*;

public class JsonUtil {
  public static GsonBuilder gsonBuilder;

  static {
    gsonBuilder = new GsonBuilder();
    gsonBuilder.serializeNulls();
    gsonBuilder.setDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
    gsonBuilder.registerTypeAdapter(Date.class, new JsonDeserializer<Date>() {
      public Date deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
        return new Date(json.getAsJsonPrimitive().getAsLong());
      }
    });
  }

  public static Gson getGson() {
    return gsonBuilder.create();
  }

  public static String serialize(Object obj){
    return getGson().toJson(obj);
  }

  public static <T> T deserializeToList(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getListTypeForDeserialization(cls));
  }

  public static <T> T deserializeToObject(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getTypeForDeserialization(cls));
  }

  public static Type getListTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("CPAASError".equalsIgnoreCase(className)) {
      return new TypeToken<List<CPAASError>>(){}.getType();
    }
    
    if ("MenuInputData".equalsIgnoreCase(className)) {
      return new TypeToken<List<MenuInputData>>(){}.getType();
    }
    
    if ("MenuOutputDetail".equalsIgnoreCase(className)) {
      return new TypeToken<List<MenuOutputDetail>>(){}.getType();
    }
    
    if ("MenuOutputDetailData".equalsIgnoreCase(className)) {
      return new TypeToken<List<MenuOutputDetailData>>(){}.getType();
    }
    
    if ("MenuOutputDetailMedia".equalsIgnoreCase(className)) {
      return new TypeToken<List<MenuOutputDetailMedia>>(){}.getType();
    }
    
    if ("MenuOutputList".equalsIgnoreCase(className)) {
      return new TypeToken<List<MenuOutputList>>(){}.getType();
    }
    
    if ("MenuOutputListData".equalsIgnoreCase(className)) {
      return new TypeToken<List<MenuOutputListData>>(){}.getType();
    }
    
    if ("ModelAccountProvisioning".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelAccountProvisioning>>(){}.getType();
    }
    
    if ("ModelAccountWebhook".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelAccountWebhook>>(){}.getType();
    }
    
    if ("ModelCallDailySummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelCallDailySummary>>(){}.getType();
    }
    
    if ("ModelCallDetail".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelCallDetail>>(){}.getType();
    }
    
    if ("ModelCallMonthlySummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelCallMonthlySummary>>(){}.getType();
    }
    
    if ("ModelEndpointList".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelEndpointList>>(){}.getType();
    }
    
    if ("ModelEventDailySummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelEventDailySummary>>(){}.getType();
    }
    
    if ("ModelEventDetail".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelEventDetail>>(){}.getType();
    }
    
    if ("ModelEventMonthlySummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelEventMonthlySummary>>(){}.getType();
    }
    
    if ("ModelFeatureDailySummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelFeatureDailySummary>>(){}.getType();
    }
    
    if ("ModelFeatureMonthlySummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelFeatureMonthlySummary>>(){}.getType();
    }
    
    if ("ModelsAccountOutputFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsAccountOutputFull>>(){}.getType();
    }
    
    if ("ModelsAccountOutputFullCalleridEmergency".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsAccountOutputFullCalleridEmergency>>(){}.getType();
    }
    
    if ("ModelsAccountOutputFullCalleridExternal".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsAccountOutputFullCalleridExternal>>(){}.getType();
    }
    
    if ("ModelsAccountOutputFullCalleridInternal".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsAccountOutputFullCalleridInternal>>(){}.getType();
    }
    
    if ("ModelsBrand".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsBrand>>(){}.getType();
    }
    
    if ("ModelsCallForward".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsCallForward>>(){}.getType();
    }
    
    if ("ModelsCallRecordingParameters".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsCallRecordingParameters>>(){}.getType();
    }
    
    if ("ModelsCallRecordingSettings".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsCallRecordingSettings>>(){}.getType();
    }
    
    if ("ModelsCallRecordingSource".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsCallRecordingSource>>(){}.getType();
    }
    
    if ("ModelsConfigFileParameter".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsConfigFileParameter>>(){}.getType();
    }
    
    if ("ModelsDeviceOutputFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsDeviceOutputFull>>(){}.getType();
    }
    
    if ("ModelsDeviceOutputFullCallerid".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsDeviceOutputFullCallerid>>(){}.getType();
    }
    
    if ("ModelsDeviceOutputFullCalleridEmergency".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsDeviceOutputFullCalleridEmergency>>(){}.getType();
    }
    
    if ("ModelsDeviceOutputFullCalleridExternal".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsDeviceOutputFullCalleridExternal>>(){}.getType();
    }
    
    if ("ModelsDeviceOutputFullCalleridInternal".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsDeviceOutputFullCalleridInternal>>(){}.getType();
    }
    
    if ("ModelsDeviceOutputFullMedia".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsDeviceOutputFullMedia>>(){}.getType();
    }
    
    if ("ModelsDeviceOutputFullMediaAudio".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsDeviceOutputFullMediaAudio>>(){}.getType();
    }
    
    if ("ModelsDeviceOutputFullProvision".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsDeviceOutputFullProvision>>(){}.getType();
    }
    
    if ("ModelsDeviceOutputFullSIP".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsDeviceOutputFullSIP>>(){}.getType();
    }
    
    if ("ModelsFamily".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsFamily>>(){}.getType();
    }
    
    if ("ModelsGenerateConfigFileRequest".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsGenerateConfigFileRequest>>(){}.getType();
    }
    
    if ("ModelsLineKeyProcessedTempData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsLineKeyProcessedTempData>>(){}.getType();
    }
    
    if ("ModelsModel".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsModel>>(){}.getType();
    }
    
    if ("ModelsMusicOnHold".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsMusicOnHold>>(){}.getType();
    }
    
    if ("ModelsTemplate".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsTemplate>>(){}.getType();
    }
    
    if ("ModelsUserOutputFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsUserOutputFull>>(){}.getType();
    }
    
    if ("ModelsUserOutputFullCallerid".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsUserOutputFullCallerid>>(){}.getType();
    }
    
    if ("ModelsUserOutputFullCalleridEmergency".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsUserOutputFullCalleridEmergency>>(){}.getType();
    }
    
    if ("ModelsUserOutputFullCalleridExternal".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsUserOutputFullCalleridExternal>>(){}.getType();
    }
    
    if ("ModelsUserOutputFullCalleridInternal".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsUserOutputFullCalleridInternal>>(){}.getType();
    }
    
    if ("ModelsVOIPAccountMusicOnHold".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsVOIPAccountMusicOnHold>>(){}.getType();
    }
    
    if ("ModelsVOIPAccountOutputFullCallerid".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsVOIPAccountOutputFullCallerid>>(){}.getType();
    }
    
    if ("ModelsVOIPDeviceOutputLineKey".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsVOIPDeviceOutputLineKey>>(){}.getType();
    }
    
    if ("ModelsVOIPSharedDoNotDisturb".equalsIgnoreCase(className)) {
      return new TypeToken<List<ModelsVOIPSharedDoNotDisturb>>(){}.getType();
    }
    
    if ("ProvisioningDocsDocsBrandOutputSingle".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProvisioningDocsDocsBrandOutputSingle>>(){}.getType();
    }
    
    if ("ProvisioningDocsDocsBrandsOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProvisioningDocsDocsBrandsOutput>>(){}.getType();
    }
    
    if ("ProvisioningDocsDocsConfigFileOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProvisioningDocsDocsConfigFileOutput>>(){}.getType();
    }
    
    if ("ProvisioningDocsDocsFamilyOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProvisioningDocsDocsFamilyOutput>>(){}.getType();
    }
    
    if ("ProvisioningDocsDocsFamilyOutputSingle".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProvisioningDocsDocsFamilyOutputSingle>>(){}.getType();
    }
    
    if ("ProvisioningDocsDocsModelOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProvisioningDocsDocsModelOutput>>(){}.getType();
    }
    
    if ("ProvisioningDocsDocsModelOutputSingle".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProvisioningDocsDocsModelOutputSingle>>(){}.getType();
    }
    
    if ("ProvisioningDocsDocsPingOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProvisioningDocsDocsPingOutput>>(){}.getType();
    }
    
    if ("ProvisioningDocsDocsPingOutputData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProvisioningDocsDocsPingOutputData>>(){}.getType();
    }
    
    if ("ProvisioningDocsDocsTemplateOutputSingle".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProvisioningDocsDocsTemplateOutputSingle>>(){}.getType();
    }
    
    if ("ProvisioningDocsDocsTemplatesOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ProvisioningDocsDocsTemplatesOutput>>(){}.getType();
    }
    
    if ("RepositoryLocationsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<RepositoryLocationsResponse>>(){}.getType();
    }
    
    if ("ResponseProvisionError".equalsIgnoreCase(className)) {
      return new TypeToken<List<ResponseProvisionError>>(){}.getType();
    }
    
    if ("ServiceAPIKey".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceAPIKey>>(){}.getType();
    }
    
    if ("ServiceAPIResponse".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceAPIResponse>>(){}.getType();
    }
    
    if ("ServiceAPIResponseStatusCodeOnly".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceAPIResponseStatusCodeOnly>>(){}.getType();
    }
    
    if ("ServiceAccountLimitOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceAccountLimitOutput>>(){}.getType();
    }
    
    if ("ServiceAccountOutputShort".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceAccountOutputShort>>(){}.getType();
    }
    
    if ("ServiceAdminUserAddData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceAdminUserAddData>>(){}.getType();
    }
    
    if ("ServiceAdminUserDeleteOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceAdminUserDeleteOutput>>(){}.getType();
    }
    
    if ("ServiceAdminUserEditData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceAdminUserEditData>>(){}.getType();
    }
    
    if ("ServiceAdminUserOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceAdminUserOutput>>(){}.getType();
    }
    
    if ("ServiceCallQueueOutputFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceCallQueueOutputFull>>(){}.getType();
    }
    
    if ("ServiceCallQueueOutputShort".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceCallQueueOutputShort>>(){}.getType();
    }
    
    if ("ServiceCallQueueRolesOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceCallQueueRolesOutput>>(){}.getType();
    }
    
    if ("ServiceCallQueueStatusOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceCallQueueStatusOutput>>(){}.getType();
    }
    
    if ("ServiceCallQueueStatusStats".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceCallQueueStatusStats>>(){}.getType();
    }
    
    if ("ServiceCallRecordingOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceCallRecordingOutput>>(){}.getType();
    }
    
    if ("ServiceCallflowAddEditData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceCallflowAddEditData>>(){}.getType();
    }
    
    if ("ServiceCallflowAddEditFlowData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceCallflowAddEditFlowData>>(){}.getType();
    }
    
    if ("ServiceCallflowOutputFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceCallflowOutputFull>>(){}.getType();
    }
    
    if ("ServiceCallflowOutputShort".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceCallflowOutputShort>>(){}.getType();
    }
    
    if ("ServiceCampaignImportOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceCampaignImportOutput>>(){}.getType();
    }
    
    if ("ServiceCampaignImportOutputMnoStatusListInner".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceCampaignImportOutputMnoStatusListInner>>(){}.getType();
    }
    
    if ("ServiceCampaignPhoneNumberOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceCampaignPhoneNumberOutput>>(){}.getType();
    }
    
    if ("ServiceCampaignTagDetagPhonenumbers".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceCampaignTagDetagPhonenumbers>>(){}.getType();
    }
    
    if ("ServiceCampaignTagDetagPhonenumbersOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceCampaignTagDetagPhonenumbersOutput>>(){}.getType();
    }
    
    if ("ServiceCdrOutputShort".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceCdrOutputShort>>(){}.getType();
    }
    
    if ("ServiceChannelOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceChannelOutput>>(){}.getType();
    }
    
    if ("ServiceDeviceOutputShort".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDeviceOutputShort>>(){}.getType();
    }
    
    if ("ServiceDeviceStatusOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDeviceStatusOutput>>(){}.getType();
    }
    
    if ("ServiceDocGroupGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocGroupGetAll>>(){}.getType();
    }
    
    if ("ServiceDocGroupGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocGroupGetSingle>>(){}.getType();
    }
    
    if ("ServiceDocsAccountAPIKey".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsAccountAPIKey>>(){}.getType();
    }
    
    if ("ServiceDocsAccountGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsAccountGetAll>>(){}.getType();
    }
    
    if ("ServiceDocsAccountGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsAccountGetSingle>>(){}.getType();
    }
    
    if ("ServiceDocsAccountLimit".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsAccountLimit>>(){}.getType();
    }
    
    if ("ServiceDocsAccountPhonenumberGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsAccountPhonenumberGetAll>>(){}.getType();
    }
    
    if ("ServiceDocsAccountProvisioning".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsAccountProvisioning>>(){}.getType();
    }
    
    if ("ServiceDocsAdminUserDelete".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsAdminUserDelete>>(){}.getType();
    }
    
    if ("ServiceDocsAdminUserGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsAdminUserGetAll>>(){}.getType();
    }
    
    if ("ServiceDocsAdminUserGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsAdminUserGetSingle>>(){}.getType();
    }
    
    if ("ServiceDocsCallDailySummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsCallDailySummary>>(){}.getType();
    }
    
    if ("ServiceDocsCallDetail".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsCallDetail>>(){}.getType();
    }
    
    if ("ServiceDocsCallMonthlySummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsCallMonthlySummary>>(){}.getType();
    }
    
    if ("ServiceDocsCallQueueGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsCallQueueGetAll>>(){}.getType();
    }
    
    if ("ServiceDocsCallQueueGetRoles".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsCallQueueGetRoles>>(){}.getType();
    }
    
    if ("ServiceDocsCallQueueGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsCallQueueGetSingle>>(){}.getType();
    }
    
    if ("ServiceDocsCallQueueGetSingleStatus".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsCallQueueGetSingleStatus>>(){}.getType();
    }
    
    if ("ServiceDocsCallQueueRecipientLoginLogoutOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsCallQueueRecipientLoginLogoutOutput>>(){}.getType();
    }
    
    if ("ServiceDocsCallRecordingGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsCallRecordingGetAll>>(){}.getType();
    }
    
    if ("ServiceDocsCallRecordingGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsCallRecordingGetSingle>>(){}.getType();
    }
    
    if ("ServiceDocsCallflowGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsCallflowGetAll>>(){}.getType();
    }
    
    if ("ServiceDocsCallflowGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsCallflowGetSingle>>(){}.getType();
    }
    
    if ("ServiceDocsCallparkGet".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsCallparkGet>>(){}.getType();
    }
    
    if ("ServiceDocsCampaignImportOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsCampaignImportOutput>>(){}.getType();
    }
    
    if ("ServiceDocsCampaignImportedGetAllOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsCampaignImportedGetAllOutput>>(){}.getType();
    }
    
    if ("ServiceDocsCampaignPhoneNumberOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsCampaignPhoneNumberOutput>>(){}.getType();
    }
    
    if ("ServiceDocsCampaignTagDetagPhonenumbersOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsCampaignTagDetagPhonenumbersOutput>>(){}.getType();
    }
    
    if ("ServiceDocsCdrGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsCdrGetAll>>(){}.getType();
    }
    
    if ("ServiceDocsCdrGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsCdrGetSingle>>(){}.getType();
    }
    
    if ("ServiceDocsChannelGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsChannelGetAll>>(){}.getType();
    }
    
    if ("ServiceDocsChannelGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsChannelGetSingle>>(){}.getType();
    }
    
    if ("ServiceDocsDeviceGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsDeviceGetAll>>(){}.getType();
    }
    
    if ("ServiceDocsDeviceGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsDeviceGetSingle>>(){}.getType();
    }
    
    if ("ServiceDocsDeviceReboot".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsDeviceReboot>>(){}.getType();
    }
    
    if ("ServiceDocsDeviceStatus".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsDeviceStatus>>(){}.getType();
    }
    
    if ("ServiceDocsE911ActiveLocationOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsE911ActiveLocationOutput>>(){}.getType();
    }
    
    if ("ServiceDocsE911ActiveLocationURIApiOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsE911ActiveLocationURIApiOutput>>(){}.getType();
    }
    
    if ("ServiceDocsE911AddLocationOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsE911AddLocationOutput>>(){}.getType();
    }
    
    if ("ServiceDocsE911LocationsURIApiOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsE911LocationsURIApiOutput>>(){}.getType();
    }
    
    if ("ServiceDocsE911RemoveLocationOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsE911RemoveLocationOutput>>(){}.getType();
    }
    
    if ("ServiceDocsE911RemoveURIApiOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsE911RemoveURIApiOutput>>(){}.getType();
    }
    
    if ("ServiceDocsE911URIsApiOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsE911URIsApiOutput>>(){}.getType();
    }
    
    if ("ServiceDocsE911ValidateLocationOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsE911ValidateLocationOutput>>(){}.getType();
    }
    
    if ("ServiceDocsEndpointList".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsEndpointList>>(){}.getType();
    }
    
    if ("ServiceDocsEventDailySummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsEventDailySummary>>(){}.getType();
    }
    
    if ("ServiceDocsEventDetail".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsEventDetail>>(){}.getType();
    }
    
    if ("ServiceDocsEventMonthlySummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsEventMonthlySummary>>(){}.getType();
    }
    
    if ("ServiceDocsFeatureDailySummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsFeatureDailySummary>>(){}.getType();
    }
    
    if ("ServiceDocsFeatureMonthlySummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsFeatureMonthlySummary>>(){}.getType();
    }
    
    if ("ServiceDocsGetQueueRecipients".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsGetQueueRecipients>>(){}.getType();
    }
    
    if ("ServiceDocsImpersonateUserGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsImpersonateUserGetSingle>>(){}.getType();
    }
    
    if ("ServiceDocsMediaGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsMediaGetAll>>(){}.getType();
    }
    
    if ("ServiceDocsMediaGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsMediaGetSingle>>(){}.getType();
    }
    
    if ("ServiceDocsMetaflowGet".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsMetaflowGet>>(){}.getType();
    }
    
    if ("ServiceDocsOrderPhonenumber".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsOrderPhonenumber>>(){}.getType();
    }
    
    if ("ServiceDocsPhonenumberAssignPayload".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsPhonenumberAssignPayload>>(){}.getType();
    }
    
    if ("ServiceDocsPhonenumberSearchGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsPhonenumberSearchGetAll>>(){}.getType();
    }
    
    if ("ServiceDocsPhonenumberUnassignPayload".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsPhonenumberUnassignPayload>>(){}.getType();
    }
    
    if ("ServiceDocsPingGet".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsPingGet>>(){}.getType();
    }
    
    if ("ServiceDocsPresenceGet".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsPresenceGet>>(){}.getType();
    }
    
    if ("ServiceDocsQueueMembershipOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsQueueMembershipOutput>>(){}.getType();
    }
    
    if ("ServiceDocsStorageGet".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsStorageGet>>(){}.getType();
    }
    
    if ("ServiceDocsSystemStatusGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsSystemStatusGetSingle>>(){}.getType();
    }
    
    if ("ServiceDocsTemporalRuleGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsTemporalRuleGetAll>>(){}.getType();
    }
    
    if ("ServiceDocsTemporalRuleGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsTemporalRuleGetSingle>>(){}.getType();
    }
    
    if ("ServiceDocsTemporalRuleSetGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsTemporalRuleSetGetAll>>(){}.getType();
    }
    
    if ("ServiceDocsTemporalRuleSetGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsTemporalRuleSetGetSingle>>(){}.getType();
    }
    
    if ("ServiceDocsUserGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsUserGetAll>>(){}.getType();
    }
    
    if ("ServiceDocsUserGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsUserGetSingle>>(){}.getType();
    }
    
    if ("ServiceDocsVoicemailGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsVoicemailGetAll>>(){}.getType();
    }
    
    if ("ServiceDocsVoicemailGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsVoicemailGetSingle>>(){}.getType();
    }
    
    if ("ServiceDocsVoicemailMessageGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsVoicemailMessageGetAll>>(){}.getType();
    }
    
    if ("ServiceDocsVoicemailMessageGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsVoicemailMessageGetSingle>>(){}.getType();
    }
    
    if ("ServiceDocsWebhookDelete".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsWebhookDelete>>(){}.getType();
    }
    
    if ("ServiceDocsWebhookGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsWebhookGetAll>>(){}.getType();
    }
    
    if ("ServiceDocsWebhookGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceDocsWebhookGetSingle>>(){}.getType();
    }
    
    if ("ServiceE911ActiveLocationOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceE911ActiveLocationOutput>>(){}.getType();
    }
    
    if ("ServiceE911ActiveLocationStatus".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceE911ActiveLocationStatus>>(){}.getType();
    }
    
    if ("ServiceE911AddLocationInput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceE911AddLocationInput>>(){}.getType();
    }
    
    if ("ServiceE911AddLocationOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceE911AddLocationOutput>>(){}.getType();
    }
    
    if ("ServiceE911LegacyDataOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceE911LegacyDataOutput>>(){}.getType();
    }
    
    if ("ServiceE911LocationInput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceE911LocationInput>>(){}.getType();
    }
    
    if ("ServiceE911LocationOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceE911LocationOutput>>(){}.getType();
    }
    
    if ("ServiceE911LocationURI".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceE911LocationURI>>(){}.getType();
    }
    
    if ("ServiceE911LocationURILegacyData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceE911LocationURILegacyData>>(){}.getType();
    }
    
    if ("ServiceE911LocationURIStatus".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceE911LocationURIStatus>>(){}.getType();
    }
    
    if ("ServiceE911RemoveLocationOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceE911RemoveLocationOutput>>(){}.getType();
    }
    
    if ("ServiceE911RemoveLocationStatus".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceE911RemoveLocationStatus>>(){}.getType();
    }
    
    if ("ServiceE911StatusOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceE911StatusOutput>>(){}.getType();
    }
    
    if ("ServiceE911URIInput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceE911URIInput>>(){}.getType();
    }
    
    if ("ServiceE911ValidateLocationInput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceE911ValidateLocationInput>>(){}.getType();
    }
    
    if ("ServiceE911ValidateLocationOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceE911ValidateLocationOutput>>(){}.getType();
    }
    
    if ("ServiceEndpoint".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceEndpoint>>(){}.getType();
    }
    
    if ("ServiceFeatureCode".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceFeatureCode>>(){}.getType();
    }
    
    if ("ServiceGroupOutputFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceGroupOutputFull>>(){}.getType();
    }
    
    if ("ServiceGroupOutputShort".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceGroupOutputShort>>(){}.getType();
    }
    
    if ("ServiceImpersonateUserOutputFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceImpersonateUserOutputFull>>(){}.getType();
    }
    
    if ("ServiceImpersonatedUserInfo".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceImpersonatedUserInfo>>(){}.getType();
    }
    
    if ("ServiceMediaOutputFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceMediaOutputFull>>(){}.getType();
    }
    
    if ("ServiceMediaOutputShort".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceMediaOutputShort>>(){}.getType();
    }
    
    if ("ServiceMetaflowOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceMetaflowOutput>>(){}.getType();
    }
    
    if ("ServiceMetaflowPattern".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceMetaflowPattern>>(){}.getType();
    }
    
    if ("ServiceParkingSlotData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceParkingSlotData>>(){}.getType();
    }
    
    if ("ServicePhoneNumberResult".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServicePhoneNumberResult>>(){}.getType();
    }
    
    if ("ServicePhoneNumberSearchOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServicePhoneNumberSearchOutput>>(){}.getType();
    }
    
    if ("ServicePhonenumberOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServicePhonenumberOutput>>(){}.getType();
    }
    
    if ("ServicePingOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServicePingOutput>>(){}.getType();
    }
    
    if ("ServiceQueueRecipientOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceQueueRecipientOutput>>(){}.getType();
    }
    
    if ("ServiceQueueRecipientOutputRecipient".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceQueueRecipientOutputRecipient>>(){}.getType();
    }
    
    if ("ServiceQueueRecipientOutputRecipientFeatures".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceQueueRecipientOutputRecipientFeatures>>(){}.getType();
    }
    
    if ("ServiceRemoveURIApiOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceRemoveURIApiOutput>>(){}.getType();
    }
    
    if ("ServiceStorageOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceStorageOutput>>(){}.getType();
    }
    
    if ("ServiceStoragePlan".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceStoragePlan>>(){}.getType();
    }
    
    if ("ServiceStoragePlanDatabase".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceStoragePlanDatabase>>(){}.getType();
    }
    
    if ("ServiceStoragePlanDatabaseAttachment".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceStoragePlanDatabaseAttachment>>(){}.getType();
    }
    
    if ("ServiceStoragePlanDatabaseDocument".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceStoragePlanDatabaseDocument>>(){}.getType();
    }
    
    if ("ServiceStoragePlanDatabaseProperties".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceStoragePlanDatabaseProperties>>(){}.getType();
    }
    
    if ("ServiceStoragePlanDatabaseTypes".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceStoragePlanDatabaseTypes>>(){}.getType();
    }
    
    if ("ServiceSystemStatusCPAASService".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceSystemStatusCPAASService>>(){}.getType();
    }
    
    if ("ServiceSystemStatusMessagingService".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceSystemStatusMessagingService>>(){}.getType();
    }
    
    if ("ServiceSystemStatusOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceSystemStatusOutput>>(){}.getType();
    }
    
    if ("ServiceSystemStatusSupportService".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceSystemStatusSupportService>>(){}.getType();
    }
    
    if ("ServiceSystemStatusVOIPService".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceSystemStatusVOIPService>>(){}.getType();
    }
    
    if ("ServiceTTS".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceTTS>>(){}.getType();
    }
    
    if ("ServiceTemporalRuleOutputFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceTemporalRuleOutputFull>>(){}.getType();
    }
    
    if ("ServiceTemporalRuleOutputShort".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceTemporalRuleOutputShort>>(){}.getType();
    }
    
    if ("ServiceTemporalRuleSetOutputFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceTemporalRuleSetOutputFull>>(){}.getType();
    }
    
    if ("ServiceTemporalRuleSetOutputShort".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceTemporalRuleSetOutputShort>>(){}.getType();
    }
    
    if ("ServiceUpdateRecordTypeForAccount".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceUpdateRecordTypeForAccount>>(){}.getType();
    }
    
    if ("ServiceUserOutputShort".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceUserOutputShort>>(){}.getType();
    }
    
    if ("ServiceVOIPAccountAddData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVOIPAccountAddData>>(){}.getType();
    }
    
    if ("ServiceVOIPAccountEditData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVOIPAccountEditData>>(){}.getType();
    }
    
    if ("ServiceVOIPAccountLimit2".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVOIPAccountLimit2>>(){}.getType();
    }
    
    if ("ServiceVOIPCallQueueAddEditData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVOIPCallQueueAddEditData>>(){}.getType();
    }
    
    if ("ServiceVOIPCallQueueEnableMembershipData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVOIPCallQueueEnableMembershipData>>(){}.getType();
    }
    
    if ("ServiceVOIPCallQueueRecipientLoginLogoutData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVOIPCallQueueRecipientLoginLogoutData>>(){}.getType();
    }
    
    if ("ServiceVOIPCallQueueRecipientStatusData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVOIPCallQueueRecipientStatusData>>(){}.getType();
    }
    
    if ("ServiceVOIPCallQueueRoleAssignData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVOIPCallQueueRoleAssignData>>(){}.getType();
    }
    
    if ("ServiceVOIPChannelRunActionData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVOIPChannelRunActionData>>(){}.getType();
    }
    
    if ("ServiceVOIPChannelRunMetaflowData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVOIPChannelRunMetaflowData>>(){}.getType();
    }
    
    if ("ServiceVOIPDeviceAddEdit2".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVOIPDeviceAddEdit2>>(){}.getType();
    }
    
    if ("ServiceVOIPDeviceAddEdit3a".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVOIPDeviceAddEdit3a>>(){}.getType();
    }
    
    if ("ServiceVOIPDeviceAddEdit3c".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVOIPDeviceAddEdit3c>>(){}.getType();
    }
    
    if ("ServiceVOIPDeviceAddEdit3d".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVOIPDeviceAddEdit3d>>(){}.getType();
    }
    
    if ("ServiceVOIPDeviceAddEdit4".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVOIPDeviceAddEdit4>>(){}.getType();
    }
    
    if ("ServiceVOIPDeviceAddEdit5".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVOIPDeviceAddEdit5>>(){}.getType();
    }
    
    if ("ServiceVOIPDeviceAddEditLineKey".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVOIPDeviceAddEditLineKey>>(){}.getType();
    }
    
    if ("ServiceVOIPDeviceAddEditProvision".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVOIPDeviceAddEditProvision>>(){}.getType();
    }
    
    if ("ServiceVOIPGroupAddEdit2".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVOIPGroupAddEdit2>>(){}.getType();
    }
    
    if ("ServiceVOIPImpersonateUser".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVOIPImpersonateUser>>(){}.getType();
    }
    
    if ("ServiceVOIPMediaAddEditData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVOIPMediaAddEditData>>(){}.getType();
    }
    
    if ("ServiceVOIPMetaflowAddData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVOIPMetaflowAddData>>(){}.getType();
    }
    
    if ("ServiceVOIPPresenceSetResetEditData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVOIPPresenceSetResetEditData>>(){}.getType();
    }
    
    if ("ServiceVOIPQueueMembershipAddData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVOIPQueueMembershipAddData>>(){}.getType();
    }
    
    if ("ServiceVOIPStorageAddEditData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVOIPStorageAddEditData>>(){}.getType();
    }
    
    if ("ServiceVOIPTemporalRuleAddEdit2".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVOIPTemporalRuleAddEdit2>>(){}.getType();
    }
    
    if ("ServiceVOIPTemporalRuleSetAddEditData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVOIPTemporalRuleSetAddEditData>>(){}.getType();
    }
    
    if ("ServiceVOIPUserAdd2".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVOIPUserAdd2>>(){}.getType();
    }
    
    if ("ServiceVOIPVoicemailAddEditData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVOIPVoicemailAddEditData>>(){}.getType();
    }
    
    if ("ServiceVOIPVoicemailMessageAddData".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVOIPVoicemailMessageAddData>>(){}.getType();
    }
    
    if ("ServiceVOIPVoicemailMessageChange".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVOIPVoicemailMessageChange>>(){}.getType();
    }
    
    if ("ServiceVoicemailMedia".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVoicemailMedia>>(){}.getType();
    }
    
    if ("ServiceVoicemailMessageOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVoicemailMessageOutput>>(){}.getType();
    }
    
    if ("ServiceVoicemailOutputFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVoicemailOutputFull>>(){}.getType();
    }
    
    if ("ServiceVoicemailOutputShort".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceVoicemailOutputShort>>(){}.getType();
    }
    
    if ("ServiceWebhookAdd".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceWebhookAdd>>(){}.getType();
    }
    
    if ("ServiceWebhookDeleteOutput".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceWebhookDeleteOutput>>(){}.getType();
    }
    
    if ("ServiceWebhookEdit".equalsIgnoreCase(className)) {
      return new TypeToken<List<ServiceWebhookEdit>>(){}.getType();
    }
    
    return new TypeToken<List<Object>>(){}.getType();
  }

  public static Type getTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("CPAASError".equalsIgnoreCase(className)) {
      return new TypeToken<CPAASError>(){}.getType();
    }
    
    if ("MenuInputData".equalsIgnoreCase(className)) {
      return new TypeToken<MenuInputData>(){}.getType();
    }
    
    if ("MenuOutputDetail".equalsIgnoreCase(className)) {
      return new TypeToken<MenuOutputDetail>(){}.getType();
    }
    
    if ("MenuOutputDetailData".equalsIgnoreCase(className)) {
      return new TypeToken<MenuOutputDetailData>(){}.getType();
    }
    
    if ("MenuOutputDetailMedia".equalsIgnoreCase(className)) {
      return new TypeToken<MenuOutputDetailMedia>(){}.getType();
    }
    
    if ("MenuOutputList".equalsIgnoreCase(className)) {
      return new TypeToken<MenuOutputList>(){}.getType();
    }
    
    if ("MenuOutputListData".equalsIgnoreCase(className)) {
      return new TypeToken<MenuOutputListData>(){}.getType();
    }
    
    if ("ModelAccountProvisioning".equalsIgnoreCase(className)) {
      return new TypeToken<ModelAccountProvisioning>(){}.getType();
    }
    
    if ("ModelAccountWebhook".equalsIgnoreCase(className)) {
      return new TypeToken<ModelAccountWebhook>(){}.getType();
    }
    
    if ("ModelCallDailySummary".equalsIgnoreCase(className)) {
      return new TypeToken<ModelCallDailySummary>(){}.getType();
    }
    
    if ("ModelCallDetail".equalsIgnoreCase(className)) {
      return new TypeToken<ModelCallDetail>(){}.getType();
    }
    
    if ("ModelCallMonthlySummary".equalsIgnoreCase(className)) {
      return new TypeToken<ModelCallMonthlySummary>(){}.getType();
    }
    
    if ("ModelEndpointList".equalsIgnoreCase(className)) {
      return new TypeToken<ModelEndpointList>(){}.getType();
    }
    
    if ("ModelEventDailySummary".equalsIgnoreCase(className)) {
      return new TypeToken<ModelEventDailySummary>(){}.getType();
    }
    
    if ("ModelEventDetail".equalsIgnoreCase(className)) {
      return new TypeToken<ModelEventDetail>(){}.getType();
    }
    
    if ("ModelEventMonthlySummary".equalsIgnoreCase(className)) {
      return new TypeToken<ModelEventMonthlySummary>(){}.getType();
    }
    
    if ("ModelFeatureDailySummary".equalsIgnoreCase(className)) {
      return new TypeToken<ModelFeatureDailySummary>(){}.getType();
    }
    
    if ("ModelFeatureMonthlySummary".equalsIgnoreCase(className)) {
      return new TypeToken<ModelFeatureMonthlySummary>(){}.getType();
    }
    
    if ("ModelsAccountOutputFull".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsAccountOutputFull>(){}.getType();
    }
    
    if ("ModelsAccountOutputFullCalleridEmergency".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsAccountOutputFullCalleridEmergency>(){}.getType();
    }
    
    if ("ModelsAccountOutputFullCalleridExternal".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsAccountOutputFullCalleridExternal>(){}.getType();
    }
    
    if ("ModelsAccountOutputFullCalleridInternal".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsAccountOutputFullCalleridInternal>(){}.getType();
    }
    
    if ("ModelsBrand".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsBrand>(){}.getType();
    }
    
    if ("ModelsCallForward".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsCallForward>(){}.getType();
    }
    
    if ("ModelsCallRecordingParameters".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsCallRecordingParameters>(){}.getType();
    }
    
    if ("ModelsCallRecordingSettings".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsCallRecordingSettings>(){}.getType();
    }
    
    if ("ModelsCallRecordingSource".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsCallRecordingSource>(){}.getType();
    }
    
    if ("ModelsConfigFileParameter".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsConfigFileParameter>(){}.getType();
    }
    
    if ("ModelsDeviceOutputFull".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsDeviceOutputFull>(){}.getType();
    }
    
    if ("ModelsDeviceOutputFullCallerid".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsDeviceOutputFullCallerid>(){}.getType();
    }
    
    if ("ModelsDeviceOutputFullCalleridEmergency".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsDeviceOutputFullCalleridEmergency>(){}.getType();
    }
    
    if ("ModelsDeviceOutputFullCalleridExternal".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsDeviceOutputFullCalleridExternal>(){}.getType();
    }
    
    if ("ModelsDeviceOutputFullCalleridInternal".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsDeviceOutputFullCalleridInternal>(){}.getType();
    }
    
    if ("ModelsDeviceOutputFullMedia".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsDeviceOutputFullMedia>(){}.getType();
    }
    
    if ("ModelsDeviceOutputFullMediaAudio".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsDeviceOutputFullMediaAudio>(){}.getType();
    }
    
    if ("ModelsDeviceOutputFullProvision".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsDeviceOutputFullProvision>(){}.getType();
    }
    
    if ("ModelsDeviceOutputFullSIP".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsDeviceOutputFullSIP>(){}.getType();
    }
    
    if ("ModelsFamily".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsFamily>(){}.getType();
    }
    
    if ("ModelsGenerateConfigFileRequest".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsGenerateConfigFileRequest>(){}.getType();
    }
    
    if ("ModelsLineKeyProcessedTempData".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsLineKeyProcessedTempData>(){}.getType();
    }
    
    if ("ModelsModel".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsModel>(){}.getType();
    }
    
    if ("ModelsMusicOnHold".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsMusicOnHold>(){}.getType();
    }
    
    if ("ModelsTemplate".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsTemplate>(){}.getType();
    }
    
    if ("ModelsUserOutputFull".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsUserOutputFull>(){}.getType();
    }
    
    if ("ModelsUserOutputFullCallerid".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsUserOutputFullCallerid>(){}.getType();
    }
    
    if ("ModelsUserOutputFullCalleridEmergency".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsUserOutputFullCalleridEmergency>(){}.getType();
    }
    
    if ("ModelsUserOutputFullCalleridExternal".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsUserOutputFullCalleridExternal>(){}.getType();
    }
    
    if ("ModelsUserOutputFullCalleridInternal".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsUserOutputFullCalleridInternal>(){}.getType();
    }
    
    if ("ModelsVOIPAccountMusicOnHold".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsVOIPAccountMusicOnHold>(){}.getType();
    }
    
    if ("ModelsVOIPAccountOutputFullCallerid".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsVOIPAccountOutputFullCallerid>(){}.getType();
    }
    
    if ("ModelsVOIPDeviceOutputLineKey".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsVOIPDeviceOutputLineKey>(){}.getType();
    }
    
    if ("ModelsVOIPSharedDoNotDisturb".equalsIgnoreCase(className)) {
      return new TypeToken<ModelsVOIPSharedDoNotDisturb>(){}.getType();
    }
    
    if ("ProvisioningDocsDocsBrandOutputSingle".equalsIgnoreCase(className)) {
      return new TypeToken<ProvisioningDocsDocsBrandOutputSingle>(){}.getType();
    }
    
    if ("ProvisioningDocsDocsBrandsOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ProvisioningDocsDocsBrandsOutput>(){}.getType();
    }
    
    if ("ProvisioningDocsDocsConfigFileOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ProvisioningDocsDocsConfigFileOutput>(){}.getType();
    }
    
    if ("ProvisioningDocsDocsFamilyOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ProvisioningDocsDocsFamilyOutput>(){}.getType();
    }
    
    if ("ProvisioningDocsDocsFamilyOutputSingle".equalsIgnoreCase(className)) {
      return new TypeToken<ProvisioningDocsDocsFamilyOutputSingle>(){}.getType();
    }
    
    if ("ProvisioningDocsDocsModelOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ProvisioningDocsDocsModelOutput>(){}.getType();
    }
    
    if ("ProvisioningDocsDocsModelOutputSingle".equalsIgnoreCase(className)) {
      return new TypeToken<ProvisioningDocsDocsModelOutputSingle>(){}.getType();
    }
    
    if ("ProvisioningDocsDocsPingOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ProvisioningDocsDocsPingOutput>(){}.getType();
    }
    
    if ("ProvisioningDocsDocsPingOutputData".equalsIgnoreCase(className)) {
      return new TypeToken<ProvisioningDocsDocsPingOutputData>(){}.getType();
    }
    
    if ("ProvisioningDocsDocsTemplateOutputSingle".equalsIgnoreCase(className)) {
      return new TypeToken<ProvisioningDocsDocsTemplateOutputSingle>(){}.getType();
    }
    
    if ("ProvisioningDocsDocsTemplatesOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ProvisioningDocsDocsTemplatesOutput>(){}.getType();
    }
    
    if ("RepositoryLocationsResponse".equalsIgnoreCase(className)) {
      return new TypeToken<RepositoryLocationsResponse>(){}.getType();
    }
    
    if ("ResponseProvisionError".equalsIgnoreCase(className)) {
      return new TypeToken<ResponseProvisionError>(){}.getType();
    }
    
    if ("ServiceAPIKey".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceAPIKey>(){}.getType();
    }
    
    if ("ServiceAPIResponse".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceAPIResponse>(){}.getType();
    }
    
    if ("ServiceAPIResponseStatusCodeOnly".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceAPIResponseStatusCodeOnly>(){}.getType();
    }
    
    if ("ServiceAccountLimitOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceAccountLimitOutput>(){}.getType();
    }
    
    if ("ServiceAccountOutputShort".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceAccountOutputShort>(){}.getType();
    }
    
    if ("ServiceAdminUserAddData".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceAdminUserAddData>(){}.getType();
    }
    
    if ("ServiceAdminUserDeleteOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceAdminUserDeleteOutput>(){}.getType();
    }
    
    if ("ServiceAdminUserEditData".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceAdminUserEditData>(){}.getType();
    }
    
    if ("ServiceAdminUserOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceAdminUserOutput>(){}.getType();
    }
    
    if ("ServiceCallQueueOutputFull".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceCallQueueOutputFull>(){}.getType();
    }
    
    if ("ServiceCallQueueOutputShort".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceCallQueueOutputShort>(){}.getType();
    }
    
    if ("ServiceCallQueueRolesOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceCallQueueRolesOutput>(){}.getType();
    }
    
    if ("ServiceCallQueueStatusOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceCallQueueStatusOutput>(){}.getType();
    }
    
    if ("ServiceCallQueueStatusStats".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceCallQueueStatusStats>(){}.getType();
    }
    
    if ("ServiceCallRecordingOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceCallRecordingOutput>(){}.getType();
    }
    
    if ("ServiceCallflowAddEditData".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceCallflowAddEditData>(){}.getType();
    }
    
    if ("ServiceCallflowAddEditFlowData".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceCallflowAddEditFlowData>(){}.getType();
    }
    
    if ("ServiceCallflowOutputFull".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceCallflowOutputFull>(){}.getType();
    }
    
    if ("ServiceCallflowOutputShort".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceCallflowOutputShort>(){}.getType();
    }
    
    if ("ServiceCampaignImportOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceCampaignImportOutput>(){}.getType();
    }
    
    if ("ServiceCampaignImportOutputMnoStatusListInner".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceCampaignImportOutputMnoStatusListInner>(){}.getType();
    }
    
    if ("ServiceCampaignPhoneNumberOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceCampaignPhoneNumberOutput>(){}.getType();
    }
    
    if ("ServiceCampaignTagDetagPhonenumbers".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceCampaignTagDetagPhonenumbers>(){}.getType();
    }
    
    if ("ServiceCampaignTagDetagPhonenumbersOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceCampaignTagDetagPhonenumbersOutput>(){}.getType();
    }
    
    if ("ServiceCdrOutputShort".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceCdrOutputShort>(){}.getType();
    }
    
    if ("ServiceChannelOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceChannelOutput>(){}.getType();
    }
    
    if ("ServiceDeviceOutputShort".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDeviceOutputShort>(){}.getType();
    }
    
    if ("ServiceDeviceStatusOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDeviceStatusOutput>(){}.getType();
    }
    
    if ("ServiceDocGroupGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocGroupGetAll>(){}.getType();
    }
    
    if ("ServiceDocGroupGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocGroupGetSingle>(){}.getType();
    }
    
    if ("ServiceDocsAccountAPIKey".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsAccountAPIKey>(){}.getType();
    }
    
    if ("ServiceDocsAccountGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsAccountGetAll>(){}.getType();
    }
    
    if ("ServiceDocsAccountGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsAccountGetSingle>(){}.getType();
    }
    
    if ("ServiceDocsAccountLimit".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsAccountLimit>(){}.getType();
    }
    
    if ("ServiceDocsAccountPhonenumberGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsAccountPhonenumberGetAll>(){}.getType();
    }
    
    if ("ServiceDocsAccountProvisioning".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsAccountProvisioning>(){}.getType();
    }
    
    if ("ServiceDocsAdminUserDelete".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsAdminUserDelete>(){}.getType();
    }
    
    if ("ServiceDocsAdminUserGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsAdminUserGetAll>(){}.getType();
    }
    
    if ("ServiceDocsAdminUserGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsAdminUserGetSingle>(){}.getType();
    }
    
    if ("ServiceDocsCallDailySummary".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsCallDailySummary>(){}.getType();
    }
    
    if ("ServiceDocsCallDetail".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsCallDetail>(){}.getType();
    }
    
    if ("ServiceDocsCallMonthlySummary".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsCallMonthlySummary>(){}.getType();
    }
    
    if ("ServiceDocsCallQueueGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsCallQueueGetAll>(){}.getType();
    }
    
    if ("ServiceDocsCallQueueGetRoles".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsCallQueueGetRoles>(){}.getType();
    }
    
    if ("ServiceDocsCallQueueGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsCallQueueGetSingle>(){}.getType();
    }
    
    if ("ServiceDocsCallQueueGetSingleStatus".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsCallQueueGetSingleStatus>(){}.getType();
    }
    
    if ("ServiceDocsCallQueueRecipientLoginLogoutOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsCallQueueRecipientLoginLogoutOutput>(){}.getType();
    }
    
    if ("ServiceDocsCallRecordingGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsCallRecordingGetAll>(){}.getType();
    }
    
    if ("ServiceDocsCallRecordingGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsCallRecordingGetSingle>(){}.getType();
    }
    
    if ("ServiceDocsCallflowGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsCallflowGetAll>(){}.getType();
    }
    
    if ("ServiceDocsCallflowGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsCallflowGetSingle>(){}.getType();
    }
    
    if ("ServiceDocsCallparkGet".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsCallparkGet>(){}.getType();
    }
    
    if ("ServiceDocsCampaignImportOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsCampaignImportOutput>(){}.getType();
    }
    
    if ("ServiceDocsCampaignImportedGetAllOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsCampaignImportedGetAllOutput>(){}.getType();
    }
    
    if ("ServiceDocsCampaignPhoneNumberOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsCampaignPhoneNumberOutput>(){}.getType();
    }
    
    if ("ServiceDocsCampaignTagDetagPhonenumbersOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsCampaignTagDetagPhonenumbersOutput>(){}.getType();
    }
    
    if ("ServiceDocsCdrGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsCdrGetAll>(){}.getType();
    }
    
    if ("ServiceDocsCdrGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsCdrGetSingle>(){}.getType();
    }
    
    if ("ServiceDocsChannelGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsChannelGetAll>(){}.getType();
    }
    
    if ("ServiceDocsChannelGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsChannelGetSingle>(){}.getType();
    }
    
    if ("ServiceDocsDeviceGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsDeviceGetAll>(){}.getType();
    }
    
    if ("ServiceDocsDeviceGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsDeviceGetSingle>(){}.getType();
    }
    
    if ("ServiceDocsDeviceReboot".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsDeviceReboot>(){}.getType();
    }
    
    if ("ServiceDocsDeviceStatus".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsDeviceStatus>(){}.getType();
    }
    
    if ("ServiceDocsE911ActiveLocationOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsE911ActiveLocationOutput>(){}.getType();
    }
    
    if ("ServiceDocsE911ActiveLocationURIApiOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsE911ActiveLocationURIApiOutput>(){}.getType();
    }
    
    if ("ServiceDocsE911AddLocationOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsE911AddLocationOutput>(){}.getType();
    }
    
    if ("ServiceDocsE911LocationsURIApiOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsE911LocationsURIApiOutput>(){}.getType();
    }
    
    if ("ServiceDocsE911RemoveLocationOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsE911RemoveLocationOutput>(){}.getType();
    }
    
    if ("ServiceDocsE911RemoveURIApiOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsE911RemoveURIApiOutput>(){}.getType();
    }
    
    if ("ServiceDocsE911URIsApiOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsE911URIsApiOutput>(){}.getType();
    }
    
    if ("ServiceDocsE911ValidateLocationOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsE911ValidateLocationOutput>(){}.getType();
    }
    
    if ("ServiceDocsEndpointList".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsEndpointList>(){}.getType();
    }
    
    if ("ServiceDocsEventDailySummary".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsEventDailySummary>(){}.getType();
    }
    
    if ("ServiceDocsEventDetail".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsEventDetail>(){}.getType();
    }
    
    if ("ServiceDocsEventMonthlySummary".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsEventMonthlySummary>(){}.getType();
    }
    
    if ("ServiceDocsFeatureDailySummary".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsFeatureDailySummary>(){}.getType();
    }
    
    if ("ServiceDocsFeatureMonthlySummary".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsFeatureMonthlySummary>(){}.getType();
    }
    
    if ("ServiceDocsGetQueueRecipients".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsGetQueueRecipients>(){}.getType();
    }
    
    if ("ServiceDocsImpersonateUserGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsImpersonateUserGetSingle>(){}.getType();
    }
    
    if ("ServiceDocsMediaGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsMediaGetAll>(){}.getType();
    }
    
    if ("ServiceDocsMediaGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsMediaGetSingle>(){}.getType();
    }
    
    if ("ServiceDocsMetaflowGet".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsMetaflowGet>(){}.getType();
    }
    
    if ("ServiceDocsOrderPhonenumber".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsOrderPhonenumber>(){}.getType();
    }
    
    if ("ServiceDocsPhonenumberAssignPayload".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsPhonenumberAssignPayload>(){}.getType();
    }
    
    if ("ServiceDocsPhonenumberSearchGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsPhonenumberSearchGetAll>(){}.getType();
    }
    
    if ("ServiceDocsPhonenumberUnassignPayload".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsPhonenumberUnassignPayload>(){}.getType();
    }
    
    if ("ServiceDocsPingGet".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsPingGet>(){}.getType();
    }
    
    if ("ServiceDocsPresenceGet".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsPresenceGet>(){}.getType();
    }
    
    if ("ServiceDocsQueueMembershipOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsQueueMembershipOutput>(){}.getType();
    }
    
    if ("ServiceDocsStorageGet".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsStorageGet>(){}.getType();
    }
    
    if ("ServiceDocsSystemStatusGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsSystemStatusGetSingle>(){}.getType();
    }
    
    if ("ServiceDocsTemporalRuleGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsTemporalRuleGetAll>(){}.getType();
    }
    
    if ("ServiceDocsTemporalRuleGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsTemporalRuleGetSingle>(){}.getType();
    }
    
    if ("ServiceDocsTemporalRuleSetGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsTemporalRuleSetGetAll>(){}.getType();
    }
    
    if ("ServiceDocsTemporalRuleSetGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsTemporalRuleSetGetSingle>(){}.getType();
    }
    
    if ("ServiceDocsUserGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsUserGetAll>(){}.getType();
    }
    
    if ("ServiceDocsUserGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsUserGetSingle>(){}.getType();
    }
    
    if ("ServiceDocsVoicemailGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsVoicemailGetAll>(){}.getType();
    }
    
    if ("ServiceDocsVoicemailGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsVoicemailGetSingle>(){}.getType();
    }
    
    if ("ServiceDocsVoicemailMessageGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsVoicemailMessageGetAll>(){}.getType();
    }
    
    if ("ServiceDocsVoicemailMessageGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsVoicemailMessageGetSingle>(){}.getType();
    }
    
    if ("ServiceDocsWebhookDelete".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsWebhookDelete>(){}.getType();
    }
    
    if ("ServiceDocsWebhookGetAll".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsWebhookGetAll>(){}.getType();
    }
    
    if ("ServiceDocsWebhookGetSingle".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceDocsWebhookGetSingle>(){}.getType();
    }
    
    if ("ServiceE911ActiveLocationOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceE911ActiveLocationOutput>(){}.getType();
    }
    
    if ("ServiceE911ActiveLocationStatus".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceE911ActiveLocationStatus>(){}.getType();
    }
    
    if ("ServiceE911AddLocationInput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceE911AddLocationInput>(){}.getType();
    }
    
    if ("ServiceE911AddLocationOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceE911AddLocationOutput>(){}.getType();
    }
    
    if ("ServiceE911LegacyDataOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceE911LegacyDataOutput>(){}.getType();
    }
    
    if ("ServiceE911LocationInput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceE911LocationInput>(){}.getType();
    }
    
    if ("ServiceE911LocationOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceE911LocationOutput>(){}.getType();
    }
    
    if ("ServiceE911LocationURI".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceE911LocationURI>(){}.getType();
    }
    
    if ("ServiceE911LocationURILegacyData".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceE911LocationURILegacyData>(){}.getType();
    }
    
    if ("ServiceE911LocationURIStatus".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceE911LocationURIStatus>(){}.getType();
    }
    
    if ("ServiceE911RemoveLocationOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceE911RemoveLocationOutput>(){}.getType();
    }
    
    if ("ServiceE911RemoveLocationStatus".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceE911RemoveLocationStatus>(){}.getType();
    }
    
    if ("ServiceE911StatusOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceE911StatusOutput>(){}.getType();
    }
    
    if ("ServiceE911URIInput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceE911URIInput>(){}.getType();
    }
    
    if ("ServiceE911ValidateLocationInput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceE911ValidateLocationInput>(){}.getType();
    }
    
    if ("ServiceE911ValidateLocationOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceE911ValidateLocationOutput>(){}.getType();
    }
    
    if ("ServiceEndpoint".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceEndpoint>(){}.getType();
    }
    
    if ("ServiceFeatureCode".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceFeatureCode>(){}.getType();
    }
    
    if ("ServiceGroupOutputFull".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceGroupOutputFull>(){}.getType();
    }
    
    if ("ServiceGroupOutputShort".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceGroupOutputShort>(){}.getType();
    }
    
    if ("ServiceImpersonateUserOutputFull".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceImpersonateUserOutputFull>(){}.getType();
    }
    
    if ("ServiceImpersonatedUserInfo".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceImpersonatedUserInfo>(){}.getType();
    }
    
    if ("ServiceMediaOutputFull".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceMediaOutputFull>(){}.getType();
    }
    
    if ("ServiceMediaOutputShort".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceMediaOutputShort>(){}.getType();
    }
    
    if ("ServiceMetaflowOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceMetaflowOutput>(){}.getType();
    }
    
    if ("ServiceMetaflowPattern".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceMetaflowPattern>(){}.getType();
    }
    
    if ("ServiceParkingSlotData".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceParkingSlotData>(){}.getType();
    }
    
    if ("ServicePhoneNumberResult".equalsIgnoreCase(className)) {
      return new TypeToken<ServicePhoneNumberResult>(){}.getType();
    }
    
    if ("ServicePhoneNumberSearchOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServicePhoneNumberSearchOutput>(){}.getType();
    }
    
    if ("ServicePhonenumberOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServicePhonenumberOutput>(){}.getType();
    }
    
    if ("ServicePingOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServicePingOutput>(){}.getType();
    }
    
    if ("ServiceQueueRecipientOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceQueueRecipientOutput>(){}.getType();
    }
    
    if ("ServiceQueueRecipientOutputRecipient".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceQueueRecipientOutputRecipient>(){}.getType();
    }
    
    if ("ServiceQueueRecipientOutputRecipientFeatures".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceQueueRecipientOutputRecipientFeatures>(){}.getType();
    }
    
    if ("ServiceRemoveURIApiOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceRemoveURIApiOutput>(){}.getType();
    }
    
    if ("ServiceStorageOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceStorageOutput>(){}.getType();
    }
    
    if ("ServiceStoragePlan".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceStoragePlan>(){}.getType();
    }
    
    if ("ServiceStoragePlanDatabase".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceStoragePlanDatabase>(){}.getType();
    }
    
    if ("ServiceStoragePlanDatabaseAttachment".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceStoragePlanDatabaseAttachment>(){}.getType();
    }
    
    if ("ServiceStoragePlanDatabaseDocument".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceStoragePlanDatabaseDocument>(){}.getType();
    }
    
    if ("ServiceStoragePlanDatabaseProperties".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceStoragePlanDatabaseProperties>(){}.getType();
    }
    
    if ("ServiceStoragePlanDatabaseTypes".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceStoragePlanDatabaseTypes>(){}.getType();
    }
    
    if ("ServiceSystemStatusCPAASService".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceSystemStatusCPAASService>(){}.getType();
    }
    
    if ("ServiceSystemStatusMessagingService".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceSystemStatusMessagingService>(){}.getType();
    }
    
    if ("ServiceSystemStatusOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceSystemStatusOutput>(){}.getType();
    }
    
    if ("ServiceSystemStatusSupportService".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceSystemStatusSupportService>(){}.getType();
    }
    
    if ("ServiceSystemStatusVOIPService".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceSystemStatusVOIPService>(){}.getType();
    }
    
    if ("ServiceTTS".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceTTS>(){}.getType();
    }
    
    if ("ServiceTemporalRuleOutputFull".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceTemporalRuleOutputFull>(){}.getType();
    }
    
    if ("ServiceTemporalRuleOutputShort".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceTemporalRuleOutputShort>(){}.getType();
    }
    
    if ("ServiceTemporalRuleSetOutputFull".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceTemporalRuleSetOutputFull>(){}.getType();
    }
    
    if ("ServiceTemporalRuleSetOutputShort".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceTemporalRuleSetOutputShort>(){}.getType();
    }
    
    if ("ServiceUpdateRecordTypeForAccount".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceUpdateRecordTypeForAccount>(){}.getType();
    }
    
    if ("ServiceUserOutputShort".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceUserOutputShort>(){}.getType();
    }
    
    if ("ServiceVOIPAccountAddData".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVOIPAccountAddData>(){}.getType();
    }
    
    if ("ServiceVOIPAccountEditData".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVOIPAccountEditData>(){}.getType();
    }
    
    if ("ServiceVOIPAccountLimit2".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVOIPAccountLimit2>(){}.getType();
    }
    
    if ("ServiceVOIPCallQueueAddEditData".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVOIPCallQueueAddEditData>(){}.getType();
    }
    
    if ("ServiceVOIPCallQueueEnableMembershipData".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVOIPCallQueueEnableMembershipData>(){}.getType();
    }
    
    if ("ServiceVOIPCallQueueRecipientLoginLogoutData".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVOIPCallQueueRecipientLoginLogoutData>(){}.getType();
    }
    
    if ("ServiceVOIPCallQueueRecipientStatusData".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVOIPCallQueueRecipientStatusData>(){}.getType();
    }
    
    if ("ServiceVOIPCallQueueRoleAssignData".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVOIPCallQueueRoleAssignData>(){}.getType();
    }
    
    if ("ServiceVOIPChannelRunActionData".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVOIPChannelRunActionData>(){}.getType();
    }
    
    if ("ServiceVOIPChannelRunMetaflowData".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVOIPChannelRunMetaflowData>(){}.getType();
    }
    
    if ("ServiceVOIPDeviceAddEdit2".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVOIPDeviceAddEdit2>(){}.getType();
    }
    
    if ("ServiceVOIPDeviceAddEdit3a".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVOIPDeviceAddEdit3a>(){}.getType();
    }
    
    if ("ServiceVOIPDeviceAddEdit3c".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVOIPDeviceAddEdit3c>(){}.getType();
    }
    
    if ("ServiceVOIPDeviceAddEdit3d".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVOIPDeviceAddEdit3d>(){}.getType();
    }
    
    if ("ServiceVOIPDeviceAddEdit4".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVOIPDeviceAddEdit4>(){}.getType();
    }
    
    if ("ServiceVOIPDeviceAddEdit5".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVOIPDeviceAddEdit5>(){}.getType();
    }
    
    if ("ServiceVOIPDeviceAddEditLineKey".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVOIPDeviceAddEditLineKey>(){}.getType();
    }
    
    if ("ServiceVOIPDeviceAddEditProvision".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVOIPDeviceAddEditProvision>(){}.getType();
    }
    
    if ("ServiceVOIPGroupAddEdit2".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVOIPGroupAddEdit2>(){}.getType();
    }
    
    if ("ServiceVOIPImpersonateUser".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVOIPImpersonateUser>(){}.getType();
    }
    
    if ("ServiceVOIPMediaAddEditData".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVOIPMediaAddEditData>(){}.getType();
    }
    
    if ("ServiceVOIPMetaflowAddData".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVOIPMetaflowAddData>(){}.getType();
    }
    
    if ("ServiceVOIPPresenceSetResetEditData".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVOIPPresenceSetResetEditData>(){}.getType();
    }
    
    if ("ServiceVOIPQueueMembershipAddData".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVOIPQueueMembershipAddData>(){}.getType();
    }
    
    if ("ServiceVOIPStorageAddEditData".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVOIPStorageAddEditData>(){}.getType();
    }
    
    if ("ServiceVOIPTemporalRuleAddEdit2".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVOIPTemporalRuleAddEdit2>(){}.getType();
    }
    
    if ("ServiceVOIPTemporalRuleSetAddEditData".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVOIPTemporalRuleSetAddEditData>(){}.getType();
    }
    
    if ("ServiceVOIPUserAdd2".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVOIPUserAdd2>(){}.getType();
    }
    
    if ("ServiceVOIPVoicemailAddEditData".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVOIPVoicemailAddEditData>(){}.getType();
    }
    
    if ("ServiceVOIPVoicemailMessageAddData".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVOIPVoicemailMessageAddData>(){}.getType();
    }
    
    if ("ServiceVOIPVoicemailMessageChange".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVOIPVoicemailMessageChange>(){}.getType();
    }
    
    if ("ServiceVoicemailMedia".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVoicemailMedia>(){}.getType();
    }
    
    if ("ServiceVoicemailMessageOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVoicemailMessageOutput>(){}.getType();
    }
    
    if ("ServiceVoicemailOutputFull".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVoicemailOutputFull>(){}.getType();
    }
    
    if ("ServiceVoicemailOutputShort".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceVoicemailOutputShort>(){}.getType();
    }
    
    if ("ServiceWebhookAdd".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceWebhookAdd>(){}.getType();
    }
    
    if ("ServiceWebhookDeleteOutput".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceWebhookDeleteOutput>(){}.getType();
    }
    
    if ("ServiceWebhookEdit".equalsIgnoreCase(className)) {
      return new TypeToken<ServiceWebhookEdit>(){}.getType();
    }
    
    return new TypeToken<Object>(){}.getType();
  }

};
