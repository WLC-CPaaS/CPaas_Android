/**
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ServiceAPIKey {
  
  @SerializedName("client_id")
  private String clientId = null;
  @SerializedName("client_secret")
  private String clientSecret = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getClientId() {
    return clientId;
  }
  public void setClientId(String clientId) {
    this.clientId = clientId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getClientSecret() {
    return clientSecret;
  }
  public void setClientSecret(String clientSecret) {
    this.clientSecret = clientSecret;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceAPIKey serviceAPIKey = (ServiceAPIKey) o;
    return (this.clientId == null ? serviceAPIKey.clientId == null : this.clientId.equals(serviceAPIKey.clientId)) &&
        (this.clientSecret == null ? serviceAPIKey.clientSecret == null : this.clientSecret.equals(serviceAPIKey.clientSecret));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.clientId == null ? 0: this.clientId.hashCode());
    result = 31 * result + (this.clientSecret == null ? 0: this.clientSecret.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceAPIKey {\n");
    
    sb.append("  clientId: ").append(clientId).append("\n");
    sb.append("  clientSecret: ").append(clientSecret).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
